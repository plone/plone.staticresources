{"version":3,"file":"chunks/22781.abecab8fad88dc28e79f.min.js","mappings":"qKAKA,MAsBMA,EAASC,GAAQC,GAdRC,KACX,MAAMC,SAAWD,EACjB,OAAU,OAANA,EACG,OACU,WAANC,GAAkBC,MAAMC,QAAQH,GACpC,QAGQ,WAANC,IAAuCG,EAhBlCC,EAgBsBL,EAAeM,GAhBlCC,EAgBsBC,QAdVC,UAcgCH,EAAMI,cAAcN,KAXhD,QAAxBO,EAAKN,EAAEE,mBAAgC,IAAPI,OAAgB,EAASA,EAAGC,QAAUL,EAAYK,MAYpF,SAEAX,EAHwC,IAACG,EAAGE,EAhBtCO,IAACR,EAAGE,EACbI,CAmBJ,EAE4BG,CAAOf,KAAWD,EAE5CiB,EAAWlB,EAAO,UAClBmB,EAAWnB,EAAO,UAClBM,EAAUN,EAAO,SAGjBoB,GANenB,EAMW,WANHC,UAAgBA,IAAUD,GAAlCA,MA8BrB,MAAMoB,GAXWnB,GAWM,EAVZ,IACAA,GAFMA,MAejB,IAAIoB,EAAWC,IAAAA,KAAaC,MAE5B,MAAMC,EAASV,GAAQW,GAAUA,EAAOC,QAAQC,IAAIb,GAC9Cc,EAAaH,IACf,MAAMI,EAAiBJ,EAAOC,QAAQI,SACtCD,EAAe,yBAA0B,CACzCE,UAAW,SACXC,QAAS,UAETH,EAAe,yBAA0B,CACzCE,UAAW,SACXC,QAAS,UAETH,EAAe,oCAAqC,CACpDE,UAAW,SACXC,QAAS,eAETH,EAAe,kCAAmC,CAAEE,UAAW,WAC/DF,EAAe,0BAA2B,CAAEE,UAAW,WACvDF,EAAe,YAAa,CAC5BE,UAAW9B,GAASgB,EAAShB,IA/CfgC,EAAChC,EAAOiC,KACtB,GAAI7B,EAAQJ,GAAQ,CACpB,IAAK,IAAIkC,EAAI,EAAGC,EAAMnC,EAAMoC,OAAQF,EAAIC,IAAOD,EAC3C,IAAKD,EAAKjC,EAAMkC,IAChB,OAAO,EAGX,OAAO,CACP,CACA,OAAO,CAAK,EAsC2BF,CAAUhC,EAAOiB,IAAaC,EAAWlB,GAChF+B,QAAS,KAETH,EAAe,wBAAyB,CACxCE,UAAW,SACXC,QAASP,EAAOa,UAAU,cAE1BT,EAAe,wBAAyB,CACxCE,UAAW,SACXC,QAASP,EAAOa,UAAU,aACxB,EAEAC,EAAyBf,EAAO,0BAChCgB,EAA6BhB,EAAO,0BACpCiB,EAA4BjB,EAAO,qCACnCkB,EAA0BlB,EAAO,mCACjCmB,EAA2BnB,EAAO,2BAClCoB,EAAepB,EAAO,aACtBqB,EAAiBrB,EAAO,yBACxBsB,EAAiBtB,EAAO,yBACxBuB,EAAkBvB,EAAO,iBACzBwB,EAA0BxB,EAAO,oBACjCyB,EAAezB,EAAO,cAEtB0B,EAAWA,CAACjD,EAAOmC,KAErB,IADAnC,EAAQ,GAAKA,GACHoC,OAASD,EACnB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAMnC,EAAMoC,OAAQF,IACpClC,EAAQ,IAAMA,EAGlB,OAAOA,CAAK,EAEVkD,EAAc,SAAC1B,EAAQ2B,GAA2B,IAAtBC,EAAIC,UAAAjB,OAAA,QAAAkB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAIE,KACzC,MAAMC,EAAY,kCAAkCC,MAAM,KACpDC,EAAW,kEAAkED,MAAM,KACnFE,EAAc,kDAAkDF,MAAM,KACtEG,EAAa,wFAAwFH,MAAM,KAiBjH,OADAN,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIU,QAAQ,KAAM,aACdA,QAAQ,KAAM,gBACdA,QAAQ,KAAM,GAAKT,EAAKU,gBACxBD,QAAQ,KAAM,GAAKT,EAAKW,YACxBF,QAAQ,KAAMZ,EAASG,EAAKY,WAAa,EAAG,KAC5CH,QAAQ,KAAMZ,EAASG,EAAKa,UAAW,KACvCJ,QAAQ,KAAM,GAAKZ,EAASG,EAAKc,WAAY,KAC7CL,QAAQ,KAAM,GAAKZ,EAASG,EAAKe,aAAc,KAC/CN,QAAQ,KAAM,GAAKZ,EAASG,EAAKgB,aAAc,KAC/CP,QAAQ,KAAM,KAAOT,EAAKc,WAAa,IAAM,GAAK,KAClDL,QAAQ,KAAYT,EAAKc,WAAa,GAAK,KAAO,OAClDL,QAAQ,KAAM,GAAKrC,EAAOa,UAAUuB,EAAWR,EAAKY,eACpDH,QAAQ,KAAM,GAAKrC,EAAOa,UAAUsB,EAAYP,EAAKY,eACrDH,QAAQ,KAAM,GAAKrC,EAAOa,UAAUqB,EAASN,EAAKiB,aAClDR,QAAQ,KAAM,GAAKrC,EAAOa,UAAUmB,EAAUJ,EAAKiB,aACnDR,QAAQ,KAAM,IAE5B,EAEA,MAAMS,EACF9D,WAAAA,CAAY+D,EAAKvE,GACjBwE,KAAKD,IAAMA,EACXC,KAAKxE,MAAQA,CACb,CACA,WAAOyE,CAAKzE,GACZ,OAAO,IAAIsE,GAAS,EAAMtE,EAC1B,CACA,WAAO0E,GACP,OAAOJ,EAASK,aAChB,CACAC,IAAAA,CAAKC,EAAQC,GACb,OAAIN,KAAKD,IACEO,EAAON,KAAKxE,OAEZ6E,GAEX,CACAE,MAAAA,GACA,OAAOP,KAAKD,GACZ,CACAS,MAAAA,GACA,OAAQR,KAAKD,GACb,CACAU,GAAAA,CAAIC,GACJ,OAAIV,KAAKD,IACED,EAASG,KAAKS,EAAOV,KAAKxE,QAE1BsE,EAASI,MAEpB,CACAS,IAAAA,CAAKC,GACL,OAAIZ,KAAKD,IACEa,EAAOZ,KAAKxE,OAEZsE,EAASI,MAEpB,CACAW,MAAAA,CAAOC,GACP,OAAOd,KAAKD,KAAOe,EAAUd,KAAKxE,MAClC,CACAuF,MAAAA,CAAOD,GACP,OAAQd,KAAKD,KAAOe,EAAUd,KAAKxE,MACnC,CACAwF,MAAAA,CAAOF,GACP,OAAKd,KAAKD,KAAOe,EAAUd,KAAKxE,OACrBwE,KAEAF,EAASI,MAEpB,CACAe,KAAAA,CAAMC,GACN,OAAOlB,KAAKD,IAAMC,KAAKxE,MAAQ0F,CAC/B,CACAC,EAAAA,CAAGD,GACH,OAAOlB,KAAKD,IAAMC,KAAOkB,CACzB,CACAE,UAAAA,CAAWC,GACX,OAAOrB,KAAKD,IAAMC,KAAKxE,MAAQ6F,GAC/B,CACAC,OAAAA,CAAQD,GACR,OAAOrB,KAAKD,IAAMC,KAAOqB,GACzB,CACAE,QAAAA,CAASC,GACT,GAAKxB,KAAKD,IAGN,OAAOC,KAAKxE,MAFZ,MAAM,IAAIiG,MAAMD,QAAyCA,EAAU,0BAIvE,CACA,WAAOE,CAAKlG,GACZ,MAlLemG,IAAKA,QACIC,CAiLHpG,GAAgCsE,EAASI,OAAhCJ,EAASG,KAAKzE,EAC5C,CACAqG,SAAAA,GACA,OAAO7B,KAAKD,IAAMC,KAAKxE,MAAQ,IAC/B,CACAsG,cAAAA,GACA,OAAO9B,KAAKxE,KACZ,CACAuG,IAAAA,CAAKC,GACDhC,KAAKD,KACLiC,EAAOhC,KAAKxE,MAEhB,CACAyG,OAAAA,GACA,OAAOjC,KAAKD,IAAM,CAACC,KAAKxE,OAAS,EACjC,CACA0G,QAAAA,GACA,OAAOlC,KAAKD,IAAM,QAASC,KAAKxE,SAAY,QAC5C,EAEJsE,EAASK,cAAgB,IAAIL,GAAS,GAEtC,MA6BMqC,EAAOA,CAACC,EAAI3E,IAXA4E,EAACD,EAAI3E,EAAM6E,KACzB,IAAK,IAAI5E,EAAI,EAAGC,EAAMyE,EAAGxE,OAAQF,EAAIC,EAAKD,IAAK,CAC/C,MAAMjC,EAAI2G,EAAG1E,GACb,GAAID,EAAKhC,EAAGiC,GACR,OAAOoC,EAASG,KAAKxE,GAClB,GAAI6G,EAAM7G,EAAGiC,GAChB,KAEJ,CACA,OAAOoC,EAASI,MAAM,EAGfmC,CAAUD,EAAI3E,EAAMd,GAGzB4F,EAAiBC,OAAOD,eAIxBE,EAAMA,CAACC,EAAKC,IAAQJ,EAAeK,KAAKF,EAAKC,GAEnD,IAAIE,EAAWhG,IAAAA,KAAaiG,WAE5B,MAAMC,EAAe,CACjB,IAAK,SACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAM,UAEJC,EAAaC,GAAQA,EAAK5D,QAAQ,YAAY6D,IAAShG,OAdhDwF,EAcoDK,EAd/CJ,EAc6DO,EAbpET,EAAIC,EAAKC,GAAO7C,EAAS4B,KAAKgB,EAAIC,IAAQ7C,EAASI,QAawBe,MAAMiC,GAdhFhG,IAACwF,EAAKC,CAcgF,IAC5FQ,EAAgBA,CAACC,EAAKC,EAAGC,IAjDhBzC,EAACuB,EAAI3E,KAChB,IAAK,IAAIC,EAAI,EAAGC,EAAMyE,EAAGxE,OAAQF,EAAIC,EAAKD,IAE1C,GAAID,EADM2E,EAAG1E,GACDA,GACR,OAAO,EAGX,OAAO,CAAK,EA0C2BmD,CAAOyC,EAAQrE,MAAM,QAAQsE,GAAKH,EAAII,SAASH,EAAGE,KACvFE,EAAoBA,CAACzG,EAAQiG,IAASJ,EAAS,CAAEa,UAAU,GAAQ1G,EAAO2G,QAAQC,UAAU5G,EAAO6G,OAAOC,MAAMb,EAAM,CAAEc,QAAQ,KAkBhIC,EAAwBA,CAACf,EAAMgB,KACjCrH,EAASmF,KAAKkC,GAAgB,CAACnI,EAAGoI,KAC9BxH,EAAWZ,KACXA,EAAIA,EAAEoI,IAEVjB,EAAOA,EAAK5D,QAAQ,IAAI8E,OAAO,UAAkBD,EArPzB7E,QAAQ,sBAAuB,QAqPD,OAAO,KAAMvD,EAAE,IAE9DmH,GAELmB,EAAcA,CAACpH,EAAQqH,KACzB,MAAMjB,EAAMpG,EAAOoG,IAAKkB,EAAKpG,EAAyBlB,GACtDJ,EAASmF,KAAKqB,EAAImB,OAAO,IAAKF,IAAQG,IACtC5H,EAASmF,KAAKuC,GAAI,CAACxI,EAAGoI,KACdd,EAAII,SAASgB,EAAGN,IAChBxH,EAAWZ,IACXA,EAAE0I,EAEN,GACF,GACA,EAEAC,EAAiBA,CAACzH,EAAQ0H,EAAKzB,KACjC,MAAMG,EAAMpG,EAAOoG,IACbuB,EAAM3H,EAAO4H,UAAUC,aAC7B5B,EAAOe,EAAsBf,EAAM/E,EAAyBlB,IAC5D,IAAI8H,EAAK1B,EAAI2B,OAAO,MAAO,CAAC,EAAGtB,EAAkBzG,EAAQiG,IACzD,MAAMI,EAAID,EAAImB,OAAO,WAAYO,GAC7BzB,GAAKA,EAAEzF,OAAS,IACpBkH,EAAK1B,EAAI2B,OAAO,OAChBD,EAAGE,YAAY3B,EAAE,GAAG4B,WAAU,KAE9BrI,EAASmF,KAAKqB,EAAImB,OAAO,IAAKO,IAAKzB,IAC/BF,EAAcC,EAAKC,EAAGvF,EAAuBd,MAC7CqG,EAAE6B,UAAYxG,EAAY1B,EAAQoB,EAAepB,KAEjDmG,EAAcC,EAAKC,EAAGtF,EAA2Bf,MACjDqG,EAAE6B,UAAYxG,EAAY1B,EAAQqB,EAAerB,KAEjDmG,EAAcC,EAAKC,EAAGrF,EAA0BhB,MAChDqG,EAAE6B,UAAYP,EAClB,IAEAP,EAAYpH,EAAQ8H,GACpB9H,EAAOmI,YAAY,oBAAoB,EAAOL,EAAGI,WACjDlI,EAAOoI,WAAW,EAGtB,IAAIC,EAASxI,IAAAA,IAEb,MAuBMyI,EAAOA,CAACtI,EAAQuI,KAClB,MAsBMC,EAAuBC,GA1JrBhF,EAAC2B,EAAIsD,KACb,MAAM/H,EAAMyE,EAAGxE,OACT+H,EAAI,IAAIhK,MAAMgC,GACpB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CAC9B,MAAMjC,EAAI2G,EAAG1E,GACbiI,EAAEjI,GAAKgI,EAAEjK,EAAGiC,EACZ,CACA,OAAOiI,CAAC,EAmJkClF,CAAIgF,GAAW/J,IAAK,CAC9DkK,KAAMlK,EAAEkK,KACRpK,MAAOE,EAAEkK,SAEHC,EAAeA,CAACJ,EAAWK,IAAkB3D,EAAKsD,GAAW/J,GAAKA,EAAEkK,OAASE,IAC7EC,EAAkBC,IACxBhJ,EAAOiJ,cAAcC,MAAM,0CAA0C,IAAMF,EAAIG,MAAM,aAAY,EAE3FC,EAAqB1K,GAAKA,EAAEF,MAAM6K,IAAIjG,MAAK,IAAMkG,QAAQC,QAAQ7K,EAAEF,MAAMgL,QAAQvF,MAAM,OAAMoF,GAAOI,MAAMJ,GAAKK,MAAKC,GAAOA,EAAIC,GAAKD,EAAIf,OAASU,QAAQO,aACzJC,EAAWA,CAACrB,EAAWsB,IAAiB,CAACf,EAAKgB,KACpD,GAAoB,aAAhBA,EAAO3K,KAAqB,CAC5B,MAAM4K,EAAmBjB,EAAIkB,UAAUC,SACvCtB,EAAaJ,EAAWwB,GAAkBlF,MAAKrG,IAC/CsK,EAAIoB,MAAM,cACVhB,EAAmB1K,GAAGgL,MAAKW,IACvBN,EAAaf,EAAKtK,EAAG2L,EAAY,IAClCC,OAAM,KACLP,EAAaf,EAAKtK,EAAG,IACrBsK,EAAIuB,WAAW,QAAQ,GACvBxB,EAAgBC,EAAI,GACtB,GAEN,GAEMwB,EAAW/B,GAAaO,IAC9B,MAAMyB,EAAOzB,EAAIkB,UACjBrB,EAAaJ,EAAWgC,EAAKN,UAAUpF,MAAKrG,IACxC0K,EAAmB1K,GAAGgL,MAAKW,IAC3BrK,EAAOmI,YAAY,qBAAqB,EAAOkC,GAC/CrB,EAAI0B,OAAO,IACRJ,OAAM,KACTtB,EAAIuB,WAAW,QAAQ,GACvBxB,EAAgBC,EAAI,GAClB,GACJ,EAxDsB2B,MACxB,IAAKpC,GAAwC,IAAxBA,EAAa3H,OAAc,CAC5C,MAAM4D,EAAUxE,EAAOa,UAAU,yBAKjC,OAJAb,EAAO4K,oBAAoBtC,KAAK,CAChCM,KAAMpE,EACNjG,KAAM,SAECuE,EAASI,MACpB,CACA,OAAOJ,EAAS4B,KAAK9E,EAAS6D,IAAI8E,GAAc,CAAC4B,EAAUU,KACvD,MAAMC,EAAgBpM,QAAeoD,IAAVpD,EAAE2K,IAC7B,MAAO,CACP0B,SAAoB,IAAVF,EACVjC,KAAMuB,EAASa,MACfxM,MAAO,CACH6K,IAAKyB,EAAcX,GAAYrH,EAAS4B,KAAKyF,EAASd,KAAOvG,EAASI,OACtEsG,QAAUsB,EAAcX,GAA8CrH,EAASI,OAA3CJ,EAAS4B,KAAKyF,EAASX,SAC3DyB,YAAad,EAASc,aAEzB,IACF,EA0GkBN,GACR5F,MArEM0D,IACnB,MAAMyC,EAAiB1C,EAAqBC,GACtC0C,EAAkBA,CAACC,EAAWC,KAAgB,CAChDL,MAAO,kBACPM,KAAM,QACNC,KAAM,CACNhN,KAAM,QACNiN,MAAOJ,GAEPC,cACAI,QAAS,CACT,CACIlN,KAAM,SACNc,KAAM,SACNuJ,KAAM,UAEV,CACIrK,KAAM,SACNc,KAAM,OACNuJ,KAAM,OACN8C,SAAS,IAGblB,SAAUA,EAAS/B,GACnBqB,SAAUA,EAASrB,EAAWsB,KAE5BA,EAAeA,CAAC4B,EAAWxB,EAAUE,KACvC,MAAMb,EA7GYoC,EAAC5L,EAAQiG,KAC/B,IAAI7G,EACJ,IAAIiL,EAAc5D,EAAkBzG,EAAQiG,GAC5C,IAAgC,IAA5BA,EAAK4F,QAAQ,UAAkB,CACnC,IAAIC,EAAoB,GACxB,MAAMC,EAAkD,QAAlC3M,EAAKkC,EAAgBtB,UAA4B,IAAPZ,EAAgBA,EAAK,GAC/E4M,EAAOzK,EAAwBvB,GAAU,2BAA6B,GAC5EJ,EAASmF,KAAK/E,EAAOiM,YAAY5C,IAC7ByC,GAAqB,gDAAkD9L,EAAOkM,gBAAgBC,WAAW9C,GAAO,IAAM2C,EAAO,GAAG,IAEhID,IACAD,GAAqB,0BAA4BC,EAAe,YAEpE,MAAMK,EAAY5K,EAAaxB,GACzBqM,EAASrM,EAAOoG,IAAIiG,OAEpBC,EAA6B,4KADVjE,EAAOkE,GAAGC,WAAanE,EAAOkE,GAAGE,QAAU,YAAc,0BAC/C,iDAC7BC,EAAiB1M,EAAO2M,UAAUC,IAClCC,EAAUH,EAAiB,SAAWL,EAAOK,GAAkB,IAAM,GAC3ErC,EAAc,0CAA2DgC,EAAOrM,EAAOkM,gBAAgBY,UAAY,KAAOhB,EAAoBQ,EAAhI,uBAA2LD,EAAOD,GAAa,IAAMS,EAAU,IAAMxC,EAArO,gBACd,CACA,OAAOrD,EAAsBqD,EAAapJ,EAAwBjB,GAAQ,EAwFtD4L,CAAkB5L,EAAQqK,GACpCe,EAAY,CAClB,CACI7M,KAAM,UACNc,KAAM,WACN0N,MAAO,YACPvB,MAAON,GAEX,CACI3M,KAAM,YACN0H,KAAM,yBAA0BD,EAAWmE,EAAS3L,MAAMyM,oBAE9D,CACI8B,MAAO,UACPxO,KAAM,SACNc,KAAM,UACN2N,WAAW,EACXC,aAAa,IAGX5B,EAAc,CACpBlB,SAAUA,EAASvB,KACnBsE,QAAS1D,GAETmC,EAAUwB,UACVxB,EAAUyB,OAAOjC,EAAgBC,EAAWC,IAC5CM,EAAUxC,MAAM,WAAW,EAEzBwC,EAAY3L,EAAOiJ,cAAcX,KAAK6C,EAAgB,GAAI,CAC5DhB,SAAU,GACV+C,QAAS,MAEbvB,EAAUvB,MAAM,cAChBhB,EAAmBX,EAAU,IAAIiB,MAAKW,IAClCN,EAAa4B,EAAWlD,EAAU,GAAI4B,EAAY,IACnDC,OAAM,KACLP,EAAa4B,EAAWlD,EAAU,GAAI,IACtCkD,EAAUpB,WAAW,QAAQ,GAC7BxB,EAAgB4C,EAAU,GAC5B,GAG2B,EAM3B0B,EAAarN,IACfA,EAAOsN,WAAW,oBAvctB,SAAeC,GAAoB,QAAAC,EAAA3L,UAAAjB,OAAb6M,EAAW,IAAA9O,MAAA6O,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAXD,EAAWC,EAAA,GAAA7L,UAAA6L,GAC7B,OAAO,WAAiB,QAAAC,EAAA9L,UAAAjB,OAAbgN,EAAQ,IAAAjP,MAAAgP,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARD,EAAQC,GAAAhM,UAAAgM,GACnB,MAAMC,EAAML,EAAYM,OAAOH,GAC/B,OAAOL,EAAGS,MAAM,KAAMF,EACtB,CACJ,CAkc2CG,CAAMxG,EAAgBzH,IAC7DA,EAAOsN,WAAW,cAhOKY,EAAClO,EAAQmO,IACzB,KACP,MAAM5F,EAAepH,EAAanB,GAC9BN,EAAW6I,GACXA,EAAa4F,GACN3O,EAAS+I,GAChBkB,MAAMlB,GAAcmB,MAAKC,IACrBA,EAAIC,IACJD,EAAIyE,OAAO1E,KAAKyE,EACpB,IAGAA,EAAS5F,EACb,EAmNiC2F,CAAmBlO,EALrCA,IAAUyI,IACzBH,EAAKtI,EAAQyI,EAAU,EAIqC4F,CAAWrO,IAAS,EAmB9EsO,EAAkBtO,GAAUgJ,IAC9B,MAAMuF,EAAcA,KACpBvF,EAAIuB,WAAWvK,EAAO4H,UAAU4G,aAAa,EAI7C,OAFAxO,EAAOyO,GAAG,aAAcF,GACxBA,IACO,KACPvO,EAAO0O,IAAI,aAAcH,EAAY,CACpC,EA4BL,UAVuBI,KAEnB9O,IAAAA,cAAsB+O,IAAI,YAAY,CAAC5O,EAAQqJ,KAC3ClJ,EAAWH,GAnBFA,KACb,MAAM6O,EAAWA,IAAM7O,EAAOmI,YAAY,eAC1CnI,EAAO8O,GAAGC,SAASC,UAAU,WAAY,CACzCC,KAAM,WACNC,QAAS,kBACTC,QAASb,EAAgBtO,GACzB6O,aAEA7O,EAAO8O,GAAGC,SAASK,YAAY,WAAY,CAC3CH,KAAM,WACNrG,KAAM,qBACNuG,QAASb,EAAgBtO,GACzB6O,YACE,EAOExO,CAASL,GACTqN,EAAWrN,GA/CLA,KACVA,EAAOyO,GAAG,cAAc5P,IACxB,MAAMuH,EAAMpG,EAAOoG,IAAKiJ,EAAahO,EAAerB,GACpDJ,EAASmF,KAAKqB,EAAImB,OAAO,MAAO1I,EAAEyQ,OAAO9H,IACjCpB,EAAII,SAASgB,EAAG,aACpB5H,EAASmF,KAAKqB,EAAImB,OAAO,IAAKC,IAAIA,IAC1BrB,EAAcC,EAAKoB,EAAGzG,EAA2Bf,MACrDwH,EAAEU,UAAYxG,EAAY1B,EAAQqP,GAClC,IAEJjI,EAAYpH,EAAQwH,GACpB,GACF,GACA,EAmCE+H,CAAMvP,EAAO,GACf,C","sources":["webpack://plone.staticresources/./node_modules/@plone/mockup/src/pat/tinymce/js/template.js"],"sourcesContent":["/**\n * template plugin backport from TinyMCE version 6.8.3 (2024-02-08)\n */\nimport tinymce from \"tinymce/tinymce\";\n\nconst hasProto = (v, constructor, predicate) => {\n    var _a;\n    if (predicate(v, constructor.prototype)) {\n    return true;\n    } else {\n    return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n    }\n};\nconst typeOf = x => {\n    const t = typeof x;\n    if (x === null) {\n    return 'null';\n    } else if (t === 'object' && Array.isArray(x)) {\n    return 'array';\n    }\n    // eslint-disable-next-line no-prototype-builtins\n    else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n    return 'string';\n    } else {\n    return t;\n    }\n};\nconst isType = type => value => typeOf(value) === type;\nconst isSimpleType = type => value => typeof value === type;\nconst isString = isType('string');\nconst isObject = isType('object');\nconst isArray = isType('array');\nconst isNullable = a => a === null || a === undefined;\nconst isNonNullable = a => !isNullable(a);\nconst isFunction = isSimpleType('function');\nconst isArrayOf = (value, pred) => {\n    if (isArray(value)) {\n    for (let i = 0, len = value.length; i < len; ++i) {\n        if (!pred(value[i])) {\n        return false;\n        }\n    }\n    return true;\n    }\n    return false;\n};\n\nconst constant = value => {\n    return () => {\n    return value;\n    };\n};\nfunction curry(fn, ...initialArgs) {\n    return (...restArgs) => {\n    const all = initialArgs.concat(restArgs);\n    return fn.apply(null, all);\n    };\n}\nconst never = constant(false);\n\nconst escape = text => text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\nvar global$2 = tinymce.util.Tools;\n\nconst option = name => editor => editor.options.get(name);\nconst register$2 = editor => {\n    const registerOption = editor.options.register;\n    registerOption('template_cdate_classes', {\n    processor: 'string',\n    default: 'cdate'\n    });\n    registerOption('template_mdate_classes', {\n    processor: 'string',\n    default: 'mdate'\n    });\n    registerOption('template_selected_content_classes', {\n    processor: 'string',\n    default: 'selcontent'\n    });\n    registerOption('template_preview_replace_values', { processor: 'object' });\n    registerOption('template_replace_values', { processor: 'object' });\n    registerOption('templates', {\n    processor: value => isString(value) || isArrayOf(value, isObject) || isFunction(value),\n    default: []\n    });\n    registerOption('template_cdate_format', {\n    processor: 'string',\n    default: editor.translate('%Y-%m-%d')\n    });\n    registerOption('template_mdate_format', {\n    processor: 'string',\n    default: editor.translate('%Y-%m-%d')\n    });\n};\nconst getCreationDateClasses = option('template_cdate_classes');\nconst getModificationDateClasses = option('template_mdate_classes');\nconst getSelectedContentClasses = option('template_selected_content_classes');\nconst getPreviewReplaceValues = option('template_preview_replace_values');\nconst getTemplateReplaceValues = option('template_replace_values');\nconst getTemplates = option('templates');\nconst getCdateFormat = option('template_cdate_format');\nconst getMdateFormat = option('template_mdate_format');\nconst getContentStyle = option('content_style');\nconst shouldUseContentCssCors = option('content_css_cors');\nconst getBodyClass = option('body_class');\n\nconst addZeros = (value, len) => {\n    value = '' + value;\n    if (value.length < len) {\n    for (let i = 0; i < len - value.length; i++) {\n        value = '0' + value;\n    }\n    }\n    return value;\n};\nconst getDateTime = (editor, fmt, date = new Date()) => {\n    const daysShort = 'Sun Mon Tue Wed Thu Fri Sat Sun'.split(' ');\n    const daysLong = 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday Sunday'.split(' ');\n    const monthsShort = 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' ');\n    const monthsLong = 'January February March April May June July August September October November December'.split(' ');\n    fmt = fmt.replace('%D', '%m/%d/%Y');\n    fmt = fmt.replace('%r', '%I:%M:%S %p');\n    fmt = fmt.replace('%Y', '' + date.getFullYear());\n    fmt = fmt.replace('%y', '' + date.getYear());\n    fmt = fmt.replace('%m', addZeros(date.getMonth() + 1, 2));\n    fmt = fmt.replace('%d', addZeros(date.getDate(), 2));\n    fmt = fmt.replace('%H', '' + addZeros(date.getHours(), 2));\n    fmt = fmt.replace('%M', '' + addZeros(date.getMinutes(), 2));\n    fmt = fmt.replace('%S', '' + addZeros(date.getSeconds(), 2));\n    fmt = fmt.replace('%I', '' + ((date.getHours() + 11) % 12 + 1));\n    fmt = fmt.replace('%p', '' + (date.getHours() < 12 ? 'AM' : 'PM'));\n    fmt = fmt.replace('%B', '' + editor.translate(monthsLong[date.getMonth()]));\n    fmt = fmt.replace('%b', '' + editor.translate(monthsShort[date.getMonth()]));\n    fmt = fmt.replace('%A', '' + editor.translate(daysLong[date.getDay()]));\n    fmt = fmt.replace('%a', '' + editor.translate(daysShort[date.getDay()]));\n    fmt = fmt.replace('%%', '%');\n    return fmt;\n};\n\nclass Optional {\n    constructor(tag, value) {\n    this.tag = tag;\n    this.value = value;\n    }\n    static some(value) {\n    return new Optional(true, value);\n    }\n    static none() {\n    return Optional.singletonNone;\n    }\n    fold(onNone, onSome) {\n    if (this.tag) {\n        return onSome(this.value);\n    } else {\n        return onNone();\n    }\n    }\n    isSome() {\n    return this.tag;\n    }\n    isNone() {\n    return !this.tag;\n    }\n    map(mapper) {\n    if (this.tag) {\n        return Optional.some(mapper(this.value));\n    } else {\n        return Optional.none();\n    }\n    }\n    bind(binder) {\n    if (this.tag) {\n        return binder(this.value);\n    } else {\n        return Optional.none();\n    }\n    }\n    exists(predicate) {\n    return this.tag && predicate(this.value);\n    }\n    forall(predicate) {\n    return !this.tag || predicate(this.value);\n    }\n    filter(predicate) {\n    if (!this.tag || predicate(this.value)) {\n        return this;\n    } else {\n        return Optional.none();\n    }\n    }\n    getOr(replacement) {\n    return this.tag ? this.value : replacement;\n    }\n    or(replacement) {\n    return this.tag ? this : replacement;\n    }\n    getOrThunk(thunk) {\n    return this.tag ? this.value : thunk();\n    }\n    orThunk(thunk) {\n    return this.tag ? this : thunk();\n    }\n    getOrDie(message) {\n    if (!this.tag) {\n        throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n    } else {\n        return this.value;\n    }\n    }\n    static from(value) {\n    return isNonNullable(value) ? Optional.some(value) : Optional.none();\n    }\n    getOrNull() {\n    return this.tag ? this.value : null;\n    }\n    getOrUndefined() {\n    return this.value;\n    }\n    each(worker) {\n    if (this.tag) {\n        worker(this.value);\n    }\n    }\n    toArray() {\n    return this.tag ? [this.value] : [];\n    }\n    toString() {\n    return this.tag ? `some(${ this.value })` : 'none()';\n    }\n}\nOptional.singletonNone = new Optional(false);\n\nconst exists = (xs, pred) => {\n    for (let i = 0, len = xs.length; i < len; i++) {\n    const x = xs[i];\n    if (pred(x, i)) {\n        return true;\n    }\n    }\n    return false;\n};\nconst map = (xs, f) => {\n    const len = xs.length;\n    const r = new Array(len);\n    for (let i = 0; i < len; i++) {\n    const x = xs[i];\n    r[i] = f(x, i);\n    }\n    return r;\n};\nconst findUntil = (xs, pred, until) => {\n    for (let i = 0, len = xs.length; i < len; i++) {\n    const x = xs[i];\n    if (pred(x, i)) {\n        return Optional.some(x);\n    } else if (until(x, i)) {\n        break;\n    }\n    }\n    return Optional.none();\n};\nconst find = (xs, pred) => {\n    return findUntil(xs, pred, never);\n};\n\nconst hasOwnProperty = Object.hasOwnProperty;\nconst get = (obj, key) => {\n    return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n};\nconst has = (obj, key) => hasOwnProperty.call(obj, key);\n\nvar global$1 = tinymce.html.Serializer;\n\nconst entitiesAttr = {\n    '\"': '&quot;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\\'': '&#039;'\n};\nconst htmlEscape = html => html.replace(/[\"'<>&]/g, match => get(entitiesAttr, match).getOr(match));\nconst hasAnyClasses = (dom, n, classes) => exists(classes.split(/\\s+/), c => dom.hasClass(n, c));\nconst parseAndSerialize = (editor, html) => global$1({ validate: true }, editor.schema).serialize(editor.parser.parse(html, { insert: true }));\n\nconst createTemplateList = (editor, callback) => {\n    return () => {\n    const templateList = getTemplates(editor);\n    if (isFunction(templateList)) {\n        templateList(callback);\n    } else if (isString(templateList)) {\n        fetch(templateList).then(res => {\n        if (res.ok) {\n            res.json().then(callback);\n        }\n        });\n    } else {\n        callback(templateList);\n    }\n    };\n};\nconst replaceTemplateValues = (html, templateValues) => {\n    global$2.each(templateValues, (v, k) => {\n    if (isFunction(v)) {\n        v = v(k);\n    }\n    html = html.replace(new RegExp('\\\\{\\\\$' + escape(k) + '\\\\}', 'g'), v);\n    });\n    return html;\n};\nconst replaceVals = (editor, scope) => {\n    const dom = editor.dom, vl = getTemplateReplaceValues(editor);\n    global$2.each(dom.select('*', scope), e => {\n    global$2.each(vl, (v, k) => {\n        if (dom.hasClass(e, k)) {\n        if (isFunction(v)) {\n            v(e);\n        }\n        }\n    });\n    });\n};\nconst insertTemplate = (editor, _ui, html) => {\n    const dom = editor.dom;\n    const sel = editor.selection.getContent();\n    html = replaceTemplateValues(html, getTemplateReplaceValues(editor));\n    let el = dom.create('div', {}, parseAndSerialize(editor, html));\n    const n = dom.select('.mceTmpl', el);\n    if (n && n.length > 0) {\n    el = dom.create('div');\n    el.appendChild(n[0].cloneNode(true));\n    }\n    global$2.each(dom.select('*', el), n => {\n    if (hasAnyClasses(dom, n, getCreationDateClasses(editor))) {\n        n.innerHTML = getDateTime(editor, getCdateFormat(editor));\n    }\n    if (hasAnyClasses(dom, n, getModificationDateClasses(editor))) {\n        n.innerHTML = getDateTime(editor, getMdateFormat(editor));\n    }\n    if (hasAnyClasses(dom, n, getSelectedContentClasses(editor))) {\n        n.innerHTML = sel;\n    }\n    });\n    replaceVals(editor, el);\n    editor.execCommand('mceInsertContent', false, el.innerHTML);\n    editor.addVisual();\n};\n\nvar global = tinymce.Env;\n\nconst getPreviewContent = (editor, html) => {\n    var _a;\n    let previewHtml = parseAndSerialize(editor, html);\n    if (html.indexOf('<html>') === -1) {\n    let contentCssEntries = '';\n    const contentStyle = (_a = getContentStyle(editor)) !== null && _a !== void 0 ? _a : '';\n    const cors = shouldUseContentCssCors(editor) ? ' crossorigin=\"anonymous\"' : '';\n    global$2.each(editor.contentCSS, url => {\n        contentCssEntries += '<link type=\"text/css\" rel=\"stylesheet\" href=\"' + editor.documentBaseURI.toAbsolute(url) + '\"' + cors + '>';\n    });\n    if (contentStyle) {\n        contentCssEntries += '<style type=\"text/css\">' + contentStyle + '</style>';\n    }\n    const bodyClass = getBodyClass(editor);\n    const encode = editor.dom.encode;\n    const isMetaKeyPressed = global.os.isMacOS() || global.os.isiOS() ? 'e.metaKey' : 'e.ctrlKey && !e.altKey';\n    const preventClicksOnLinksScript = '<script>' + 'document.addEventListener && document.addEventListener(\"click\", function(e) {' + 'for (var elm = e.target; elm; elm = elm.parentNode) {' + 'if (elm.nodeName === \"A\" && !(' + isMetaKeyPressed + ')) {' + 'e.preventDefault();' + '}' + '}' + '}, false);' + '</script> ';\n    const directionality = editor.getBody().dir;\n    const dirAttr = directionality ? ' dir=\"' + encode(directionality) + '\"' : '';\n    previewHtml = '<!DOCTYPE html>' + '<html>' + '<head>' + '<base href=\"' + encode(editor.documentBaseURI.getURI()) + '\">' + contentCssEntries + preventClicksOnLinksScript + '</head>' + '<body class=\"' + encode(bodyClass) + '\"' + dirAttr + '>' + previewHtml + '</body>' + '</html>';\n    }\n    return replaceTemplateValues(previewHtml, getPreviewReplaceValues(editor));\n};\nconst open = (editor, templateList) => {\n    const createTemplates = () => {\n    if (!templateList || templateList.length === 0) {\n        const message = editor.translate('No templates defined.');\n        editor.notificationManager.open({\n        text: message,\n        type: 'info'\n        });\n        return Optional.none();\n    }\n    return Optional.from(global$2.map(templateList, (template, index) => {\n        const isUrlTemplate = t => t.url !== undefined;\n        return {\n        selected: index === 0,\n        text: template.title,\n        value: {\n            url: isUrlTemplate(template) ? Optional.from(template.url) : Optional.none(),\n            content: !isUrlTemplate(template) ? Optional.from(template.content) : Optional.none(),\n            description: template.description\n        }\n        };\n    }));\n    };\n    const createSelectBoxItems = templates => map(templates, t => ({\n    text: t.text,\n    value: t.text\n    }));\n    const findTemplate = (templates, templateTitle) => find(templates, t => t.text === templateTitle);\n    const loadFailedAlert = api => {\n    editor.windowManager.alert('Could not load the specified template.', () => api.focus('template'));\n    };\n    const getTemplateContent = t => t.value.url.fold(() => Promise.resolve(t.value.content.getOr('')), url => fetch(url).then(res => res.ok ? res.text() : Promise.reject()));\n    const onChange = (templates, updateDialog) => (api, change) => {\n    if (change.name === 'template') {\n        const newTemplateTitle = api.getData().template;\n        findTemplate(templates, newTemplateTitle).each(t => {\n        api.block('Loading...');\n        getTemplateContent(t).then(previewHtml => {\n            updateDialog(api, t, previewHtml);\n        }).catch(() => {\n            updateDialog(api, t, '');\n            api.setEnabled('save', false);\n            loadFailedAlert(api);\n        });\n        });\n    }\n    };\n    const onSubmit = templates => api => {\n    const data = api.getData();\n    findTemplate(templates, data.template).each(t => {\n        getTemplateContent(t).then(previewHtml => {\n        editor.execCommand('mceInsertTemplate', false, previewHtml);\n        api.close();\n        }).catch(() => {\n        api.setEnabled('save', false);\n        loadFailedAlert(api);\n        });\n    });\n    };\n    const openDialog = templates => {\n    const selectBoxItems = createSelectBoxItems(templates);\n    const buildDialogSpec = (bodyItems, initialData) => ({\n        title: 'Insert Template',\n        size: 'large',\n        body: {\n        type: 'panel',\n        items: bodyItems\n        },\n        initialData,\n        buttons: [\n        {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n        },\n        {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n        }\n        ],\n        onSubmit: onSubmit(templates),\n        onChange: onChange(templates, updateDialog)\n    });\n    const updateDialog = (dialogApi, template, previewHtml) => {\n        const content = getPreviewContent(editor, previewHtml);\n        const bodyItems = [\n        {\n            type: 'listbox',\n            name: 'template',\n            label: 'Templates',\n            items: selectBoxItems\n        },\n        {\n            type: 'htmlpanel',\n            html: `<p aria-live=\"polite\">${ htmlEscape(template.value.description) }</p>`\n        },\n        {\n            label: 'Preview',\n            type: 'iframe',\n            name: 'preview',\n            sandboxed: false,\n            transparent: false\n        }\n        ];\n        const initialData = {\n        template: template.text,\n        preview: content\n        };\n        dialogApi.unblock();\n        dialogApi.redial(buildDialogSpec(bodyItems, initialData));\n        dialogApi.focus('template');\n    };\n    const dialogApi = editor.windowManager.open(buildDialogSpec([], {\n        template: '',\n        preview: ''\n    }));\n    dialogApi.block('Loading...');\n    getTemplateContent(templates[0]).then(previewHtml => {\n        updateDialog(dialogApi, templates[0], previewHtml);\n    }).catch(() => {\n        updateDialog(dialogApi, templates[0], '');\n        dialogApi.setEnabled('save', false);\n        loadFailedAlert(dialogApi);\n    });\n    };\n    const optTemplates = createTemplates();\n    optTemplates.each(openDialog);\n};\n\nconst showDialog = editor => templates => {\n    open(editor, templates);\n};\nconst register$1 = editor => {\n    editor.addCommand('mceInsertTemplate', curry(insertTemplate, editor));\n    editor.addCommand('mceTemplate', createTemplateList(editor, showDialog(editor)));\n};\n\nconst setup = editor => {\n    editor.on('PreProcess', o => {\n    const dom = editor.dom, dateFormat = getMdateFormat(editor);\n    global$2.each(dom.select('div', o.node), e => {\n        if (dom.hasClass(e, 'mceTmpl')) {\n        global$2.each(dom.select('*', e), e => {\n            if (hasAnyClasses(dom, e, getModificationDateClasses(editor))) {\n            e.innerHTML = getDateTime(editor, dateFormat);\n            }\n        });\n        replaceVals(editor, e);\n        }\n    });\n    });\n};\n\nconst onSetupEditable = editor => api => {\n    const nodeChanged = () => {\n    api.setEnabled(editor.selection.isEditable());\n    };\n    editor.on('NodeChange', nodeChanged);\n    nodeChanged();\n    return () => {\n    editor.off('NodeChange', nodeChanged);\n    };\n};\nconst register = editor => {\n    const onAction = () => editor.execCommand('mceTemplate');\n    editor.ui.registry.addButton('template', {\n    icon: 'template',\n    tooltip: 'Insert template',\n    onSetup: onSetupEditable(editor),\n    onAction\n    });\n    editor.ui.registry.addMenuItem('template', {\n    icon: 'template',\n    text: 'Insert template...',\n    onSetup: onSetupEditable(editor),\n    onAction\n    });\n};\n\nconst TemplatePlugin = () => {\n    // eslint-disable-next-line no-unused-vars\n    tinymce.PluginManager.add(\"template\", (editor, url) => {\n        register$2(editor);\n        register(editor);\n        register$1(editor);\n        setup(editor);\n    });\n}\n\nexport default TemplatePlugin;\n"],"names":["isType","type","value","x","t","Array","isArray","o","v","proto","constructor","String","prototype","isPrototypeOf","_a","name","hasProto","typeOf","isString","isObject","isFunction","never","global$2","tinymce","Tools","option","editor","options","get","register$2","registerOption","register","processor","default","isArrayOf","pred","i","len","length","translate","getCreationDateClasses","getModificationDateClasses","getSelectedContentClasses","getPreviewReplaceValues","getTemplateReplaceValues","getTemplates","getCdateFormat","getMdateFormat","getContentStyle","shouldUseContentCssCors","getBodyClass","addZeros","getDateTime","fmt","date","arguments","undefined","Date","daysShort","split","daysLong","monthsShort","monthsLong","replace","getFullYear","getYear","getMonth","getDate","getHours","getMinutes","getSeconds","getDay","Optional","tag","this","some","none","singletonNone","fold","onNone","onSome","isSome","isNone","map","mapper","bind","binder","exists","predicate","forall","filter","getOr","replacement","or","getOrThunk","thunk","orThunk","getOrDie","message","Error","from","a","isNullable","getOrNull","getOrUndefined","each","worker","toArray","toString","find","xs","findUntil","until","hasOwnProperty","Object","has","obj","key","call","global$1","Serializer","entitiesAttr","htmlEscape","html","match","hasAnyClasses","dom","n","classes","c","hasClass","parseAndSerialize","validate","schema","serialize","parser","parse","insert","replaceTemplateValues","templateValues","k","RegExp","replaceVals","scope","vl","select","e","insertTemplate","_ui","sel","selection","getContent","el","create","appendChild","cloneNode","innerHTML","execCommand","addVisual","global","open","templateList","createSelectBoxItems","templates","f","r","text","findTemplate","templateTitle","loadFailedAlert","api","windowManager","alert","focus","getTemplateContent","url","Promise","resolve","content","fetch","then","res","ok","reject","onChange","updateDialog","change","newTemplateTitle","getData","template","block","previewHtml","catch","setEnabled","onSubmit","data","close","createTemplates","notificationManager","index","isUrlTemplate","selected","title","description","selectBoxItems","buildDialogSpec","bodyItems","initialData","size","body","items","buttons","primary","dialogApi","getPreviewContent","indexOf","contentCssEntries","contentStyle","cors","contentCSS","documentBaseURI","toAbsolute","bodyClass","encode","preventClicksOnLinksScript","os","isMacOS","isiOS","directionality","getBody","dir","dirAttr","getURI","label","sandboxed","transparent","preview","unblock","redial","register$1","addCommand","fn","_len","initialArgs","_key","_len2","restArgs","_key2","all","concat","apply","curry","createTemplateList","callback","json","showDialog","onSetupEditable","nodeChanged","isEditable","on","off","TemplatePlugin","add","onAction","ui","registry","addButton","icon","tooltip","onSetup","addMenuItem","dateFormat","node","setup"],"sourceRoot":""}