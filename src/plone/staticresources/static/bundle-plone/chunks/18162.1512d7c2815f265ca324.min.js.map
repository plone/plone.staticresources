{"version":3,"file":"chunks/18162.1512d7c2815f265ca324.min.js","mappings":"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","sources":["webpack://plone.staticresources/./node_modules/mockup/node_modules/@patternslib/patternslib/src/pat/date-picker/date-picker.js"],"sourcesContent":["/* pat-date-picker  - Polyfill for input type=date */\nimport \"regenerator-runtime/runtime\"; // needed for ``await`` support\nimport $ from \"jquery\";\nimport Base from \"../../core/base\";\nimport Parser from \"../../core/parser\";\nimport dom from \"../../core/dom\";\nimport events from \"../../core/events\";\nimport utils from \"../../core/utils\";\n\nexport const parser = new Parser(\"date-picker\");\nparser.addArgument(\"behavior\", \"styled\", [\"native\", \"styled\"]);\nparser.addArgument(\"week-numbers\", [], [\"show\", \"hide\"]);\nparser.addArgument(\"i18n\"); // URL pointing to JSON resource with i18n values\nparser.addArgument(\"first-day\", 0);\nparser.addArgument(\"after\");\nparser.addArgument(\"offset-days\", 0);\n\nparser.add_argument(\"output-format\", null);\nparser.add_argument(\"locale\", null);\n\nparser.addAlias(\"behaviour\", \"behavior\");\n\n/* JSON format for i18n\n * { \"previousMonth\": \"Previous Month\",\n *   \"nextMonth\"    : \"Next Month\",\n *   \"months\"       : [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n *   \"weekdays\"     : [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n *   \"weekdaysShort\": [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\n * } */\n\nexport default Base.extend({\n    name: \"date-picker\",\n    trigger: \".pat-date-picker\",\n    parser: parser,\n    format: \"YYYY-MM-DD\",\n\n    async init() {\n        const el = this.el;\n        const disabled = this.el.disabled;\n\n        //TODO: make parser with options extend missing options.\n        //this.options = parser.parse(el, opts);\n        this.options = $.extend(parser.parse(el), this.options);\n\n        if (!disabled && this.options.after) {\n            // Set the date depending on another date which must be ``offset-days``\n            // BEFORE this date. Only set it, if the other date is AFTER this\n            // date.\n            const befores = document.querySelectorAll(this.options.after);\n            for (const b_el of befores) {\n                b_el.addEventListener(\"change\", (e) => {\n                    let b_date = e.target.value; // the \"before-date\"\n                    b_date = b_date ? new Date(b_date) : null;\n                    if (!b_date) {\n                        return;\n                    }\n                    let a_date = this.el.value; // the \"after-date\"\n                    a_date = a_date ? new Date(a_date) : null;\n                    if (!a_date || a_date < b_date) {\n                        const offset = this.options.offsetDays || 0;\n                        b_date.setDate(b_date.getDate() + offset);\n                        this.el.value = b_date.toISOString().substring(0, 10);\n                        this.dispatch_change_event();\n                    }\n                });\n            }\n        }\n\n        let display_el;\n        if (this.options.behavior === \"styled\") {\n            dom.hide(el); // hide input, but keep active (e.g. for validation)\n\n            display_el = document.createElement(\"time\");\n            display_el.setAttribute(\"class\", \"output-field\");\n            display_el.setAttribute(\"datetime\", el.value);\n            if (disabled) {\n                display_el.classList.add(\"disabled\");\n            }\n            el.insertAdjacentElement(\"beforebegin\", display_el);\n\n            // Disable click on label, as this invokes a click on the invisible\n            // input field which opens the calendar in Firefox and masks a\n            // click on display_el on Chrome.\n            const label = display_el.closest(\"label\");\n            if (label) {\n                events.add_event_listener(\n                    label,\n                    \"click\",\n                    \"pat-date-picker--label\",\n                    (e) => {\n                        e.preventDefault();\n                    }\n                );\n            }\n\n            let display_el_pat;\n            if (this.options.outputFormat) {\n                const PatDisplayTime = (await import(\"../display-time/display-time\")).default; // prettier-ignore\n                const display_time_config = { format: this.format };\n                if (this.options.outputFormat) {\n                    display_time_config[\"output-format\"] = this.options.outputFormat;\n                }\n                if (this.options.locale) {\n                    display_time_config.locale = this.options.locale;\n                }\n                display_el_pat = new PatDisplayTime(display_el, display_time_config);\n            } else {\n                display_el.textContent = el.value;\n            }\n\n            $(display_el).on(\"init.display-time.patterns\", () =>\n                this.add_clear_button(display_el)\n            );\n\n            this.el.addEventListener(\"change\", () => {\n                display_el.setAttribute(\"datetime\", this.el.value);\n                if (display_el_pat) {\n                    display_el_pat.format();\n                } else {\n                    display_el.textContent = this.el.value;\n                }\n                this.add_clear_button(display_el);\n            });\n\n            if (disabled) {\n                // nothing else to do here...\n                return;\n            }\n        } else if (disabled) {\n            return;\n        } else if (utils.checkInputSupport(\"date\", \"invalid date\")) {\n            // behavior native with native support.\n            return;\n        } else if (el.getAttribute(\"type\") === \"date\") {\n            // behavior native but no native support.\n            // Fallback JS date picker with a text input field.\n            el.setAttribute(\"type\", \"text\");\n        }\n\n        if (window.__patternslib_import_styles) {\n            import(\"./_date-picker.scss\");\n        }\n        const Pikaday = (await import(\"pikaday\")).default;\n\n        const config = {\n            field: el,\n            trigger: display_el || el,\n            format: this.format,\n            firstDay: this.options.firstDay,\n            showWeekNumber: this.options.weekNumbers === \"show\",\n            onSelect: () => this.dispatch_change_event(),\n        };\n\n        if (el.getAttribute(\"min\")) {\n            config.minDate = new Date(el.getAttribute(\"min\"));\n        }\n        if (el.getAttribute(\"max\")) {\n            config.maxDate = new Date(el.getAttribute(\"max\"));\n        }\n\n        if (this.options.i18n) {\n            try {\n                const response = await fetch(this.options.i18n);\n                config.i18n = await response.json();\n            } catch {\n                console.error(\n                    `date-picker could not load i18n for ${this.options.i18n}`\n                );\n            }\n        }\n        this.pikaday = new Pikaday(config);\n    },\n\n    add_clear_button(el_append_to) {\n        if (!this.el.disabled && !this.el.required && this.el.value) {\n            // Add clear button\n            const clear_button = document.createElement(\"span\");\n            clear_button.setAttribute(\"class\", \"cancel-button\");\n            clear_button.addEventListener(\"click\", (e) => {\n                e.stopPropagation();\n                this.el.value = null;\n                this.dispatch_change_event();\n            });\n            el_append_to.appendChild(clear_button);\n        }\n    },\n\n    dispatch_change_event() {\n        const event = new Event(\"change\", {\n            bubbles: true,\n            cancelable: true,\n        });\n        // Set ``firedBy` to prevent pikaday to call it's own handler and land\n        // in an infinite loop.\n        event.firedBy = this.pikaday;\n        this.el.dispatchEvent(event);\n\n        // Also trigger input-change\n        $(this.el).trigger(\"input-change\");\n        $(this.el.form).trigger(\"input-change\");\n    },\n});\n"],"names":["parser","addArgument","add_argument","addAlias","name","trigger","format","async","el","this","disabled","options","parse","after","befores","document","querySelectorAll","b_el","addEventListener","e","b_date","target","value","Date","a_date","offset","offsetDays","setDate","getDate","toISOString","substring","dispatch_change_event","display_el","behavior","createElement","setAttribute","classList","add","insertAdjacentElement","label","closest","display_el_pat","preventDefault","outputFormat","PatDisplayTime","default","display_time_config","locale","textContent","on","add_clear_button","getAttribute","window","__patternslib_import_styles","Pikaday","config","field","firstDay","showWeekNumber","weekNumbers","onSelect","minDate","maxDate","i18n","response","fetch","json","console","error","pikaday","el_append_to","required","clear_button","stopPropagation","appendChild","event","Event","bubbles","cancelable","firedBy","dispatchEvent","form"],"sourceRoot":""}