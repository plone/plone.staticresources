{"version":3,"file":"chunks/45196.7fd4b616a99bf2223faf.min.js","mappings":"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","sources":["webpack://plone.staticresources/./node_modules/@plone/mockup/src/pat/controlpanels/schemaeditor--implementation.js"],"sourcesContent":["import $ from \"jquery\";\n\nexport default class SchemaEditor {\n    constructor(el) {\n        this.el = el;\n    }\n\n    init() {\n        if ($(\"#form fieldset\", this.el).length >= 2) {\n            // If multiple fieldsets, release after autotoc has been initialized\n            if ($(\"#form .autotoc-nav > a\", this.el).length) {\n                // pat-autotoc already initialized, script probably run after\n                // mockup initialization.\n                this.init_schemaeditor();\n            } else {\n                // Otherwise, wait until autotoc is ready.\n                $(window).on(\"init.autotoc.patterns\", this.init_schemaeditor);\n            }\n        } else {\n            // If only one fieldset, initialize immediately\n            this.init_schemaeditor();\n        }\n    }\n\n    init_add_field(fieldset_id) {\n        if (fieldset_id) {\n            var $add_field = $(\"a#add-field\", this.el);\n            var $fieldset = $(\"#form fieldset#fieldset-\"+fieldset_id, this.el);\n            if ($fieldset.data('can-add-fields') === false){\n                $add_field.addClass('disabled');\n            } else {\n                var href = $add_field.attr(\"href\").split(\"?\")[0]; // get base href without any previously set ``fieldset_id``.\n                $add_field.attr(\"href\", href + \"?fieldset_id=\" + fieldset_id);\n                $add_field.removeClass('disabled');\n            }\n        }\n    }\n\n    init_schemaeditor() {\n        // delete field\n        $(\"a.schemaeditor-delete-field\", this.el).on(\"click\", function (e) {\n            var trigger = $(this);\n            e.preventDefault();\n            if (!window.confirm(trigger.attr(\"data-confirm_msg\"))) {\n                return;\n            }\n            $.post(\n                trigger.attr(\"href\"),\n                {\n                    _authenticator: $('input[name=\"_authenticator\"]', this.el).val(),\n                },\n                function (data) {\n                    trigger.closest(\".fieldPreview\").detach();\n                },\n                \"text\"\n            );\n        });\n\n        var set_id_from_title = function () {\n            var id = $.plone_schemaeditor_normalize_string($(this).val());\n            $(\"#form-widgets-__name__\", this.el).val(id);\n        };\n        // set id from title\n        $(\"body\").on(\n            \"focusout\",\n            \"#form-widgets-title, #form-widgets-label\",\n            set_id_from_title\n        );\n\n        // reorder fields and change fieldsets\n        // initialize after autotoc pattern is loaded.\n        $(\".fieldPreview.orderable\", this.el).plone_schemaeditor_html5_sortable(\n            function (position, fieldset_index) {\n                var url = [\n                    location.protocol,\n                    \"//\",\n                    location.host,\n                    location.pathname.replace(\"/@@fields\", \"\"),\n                    \"/\",\n                    this.attr(\"data-field_id\"),\n                    \"/@@order\",\n                ].join(\"\");\n                $.post(url, {\n                    _authenticator: $('input[name=\"_authenticator\"]', this.el).val(),\n                    pos: position,\n                    fieldset_index: fieldset_index,\n                });\n            },\n            function (fieldset_index) {\n                var url = [\n                    location.protocol,\n                    \"//\",\n                    location.host,\n                    location.pathname.replace(\"/@@fields\", \"\"),\n                    \"/\",\n                    this.attr(\"data-field_id\"),\n                    \"/@@changefieldset\",\n                ].join(\"\");\n                $.post(url, {\n                    _authenticator: $('input[name=\"_authenticator\"]', this.el).val(),\n                    fieldset_index: fieldset_index,\n                });\n            }\n        );\n\n        var self = this;\n        // ///////////////\n        // ADD FIELD INIT\n        $(\"#form .autotoc-nav > a\", this.el).each(function () {\n            $(this).on(\"click\", function (e) {\n                e.preventDefault();\n                var fieldset_id = $(this).attr(\"data-fieldset_drag_id\");\n                self.init_add_field(fieldset_id);\n            });\n        });\n\n        var fieldset_id = $(\"#form .autotoc-nav > a.active\", this.el).attr(\n            \"data-fieldset_drag_id\"\n        );\n        this.init_add_field(fieldset_id);\n    }\n}\n\n$.plone_schemaeditor_normalize_string = function (s) {\n    s = s.toLowerCase();\n    var rules = {\n        a: /[àáâãäå]/g,\n        ae: /[æ]/g,\n        c: /[ç]/g,\n        e: /[èéêë]/g,\n        i: /[ìíîï]/g,\n        n: /[ñ]/g,\n        o: /[òóôõö]/g,\n        oe: /[œ]/g,\n        u: /[ùúûü]/g,\n        y: /[ýÿ]/g,\n        th: /[ðþ]/g,\n        ss: /[ß]/g,\n        _: /[\\s\\\\]+/g,\n    };\n    for (var r in rules) s = s.replace(rules[r], r);\n    return s.replace(/[^a-z0-9_]/g, \"_\");\n};\n\n$.fn.plone_schemaeditor_html5_sortable = function (\n    reorder_callback,\n    changefieldset_callback\n) {\n    /* Takes two callbacks as arguments:\n     * reorder_callback : the callback when we move a field relatively to other fields\n     * changefieldset_callback : the callback when we move a field to a legend or a tab\n     */\n\n    // ///////////\n    // DRAGGABLES\n\n    this.attr(\"draggable\", \"true\")\n        .css(\"-webkit-user-drag\", \"element\")\n        .each(function (i) {\n            $(this).attr(\"data-drag_id\", i);\n\n            this.ondragstart = function (e) {\n                e.dataTransfer.setData(\"Text\", $(this).attr(\"data-drag_id\"));\n                e.dataTransfer.setData(\"draggable\", true);\n                $(\n                    '<div id=\"drop-marker\" style=\"position: absolute; width: 100%;\"></div>'\n                ).insertBefore(this);\n            };\n            this.ondragenter = function (e) {\n                return false;\n            };\n            this.ondragleave = function (e) {\n                return false;\n            };\n            this.ondragover = function (e) {\n                var position = $(this).position(),\n                    height = $(this).height(),\n                    marker = $(\"#drop-marker\");\n                marker.css(\"border-bottom\", \"5px dotted red\");\n                if (e.pageY < $(this).offset().top + height / 2) {\n                    marker.css(\"top\", position.top + 1 + \"px\");\n                    $(this).attr(\"draghalf\", \"top\");\n                } else {\n                    marker.css(\"top\", position.top + height + 21 + \"px\");\n                    $(this).attr(\"draghalf\", \"bottom\");\n                }\n                // window autoscroll\n                if (!$(\"html,body\").is(\":animated\")) {\n                    if ($(window).scrollTop() + $(window).height() - e.pageY < 30) {\n                        // bottom\n                        $(\"html,body\").animate(\n                            { scrollTop: $(window).scrollTop() + 50 },\n                            200\n                        );\n                    } else if (e.pageY - $(window).scrollTop() < 30) {\n                        // top\n                        $(\"html,body\").animate(\n                            { scrollTop: $(window).scrollTop() - 50 },\n                            200\n                        );\n                    }\n                }\n                return false;\n            };\n            this.ondrop = function (e) {\n                /* We move the field, into the same fieldset (simple reorder into the fieldset)\n                 * or into an other fieldset (we set a new position in a new fieldset)\n                 */\n                e.preventDefault();\n                var src = e.dataTransfer.getData(\"Text\"),\n                    node = $(\"[data-drag_id=\" + src + \"]\");\n                if ($(this).attr(\"data-drag_id\") === src) {\n                    return;\n                }\n                if ($(this).attr(\"draghalf\") === \"top\") {\n                    node.insertBefore(this);\n                } else {\n                    node.insertAfter(this);\n                }\n                var target_fieldset_id = $(this)\n                    .parents(\"fieldset\")\n                    .first()\n                    .find(\"legend\")\n                    .attr(\"data-fieldset_drag_id\");\n                // position is the new position of the field, in the same fielsdet or in the new fieldset\n                var position = node.parent().children(\"[data-drag_id]\").index(node);\n                reorder_callback.apply(node, [position, target_fieldset_id]);\n            };\n            this.ondragend = function (e) {\n                $(\"#drop-marker\").remove();\n            };\n        });\n\n    // ///////////\n    // DROPPABLES\n\n    var self = this;\n    // Make tab and legend elements droppable. we drop on legend when form tabbing is disabled\n    $(\"#form fieldset legend\")\n    .each(function (i) {\n        var $fieldset = $(\"#form fieldset#fieldset-\"+i, self.el);\n        if ($fieldset.data('can-add-fields') === true){\n            $(this).attr(\"droppable\", \"true\")\n        }\n        $(this).attr(\"data-fieldset_drag_id\", i);\n    });\n    $(\"#form .autotoc-nav > a\")\n        .each(function (i) {\n            // Plone 5 / mockup\n            var $fieldset = $(\"#form fieldset#fieldset-\"+i, self.el);\n            if ($fieldset.data('can-add-fields') === true){\n                $(this).attr(\"droppable\", \"true\");\n                this.ondrop = function (e) {\n                    // apply change fieldset when we drop a field on a tab or a legend\n                    e.preventDefault();\n                    var src = e.dataTransfer.getData(\"Text\"),\n                        node = $(\"[data-drag_id=\" + src + \"]\");\n                    var orig_fieldset = node.parents(\"fieldset\");\n                    var orig_fieldset_id = orig_fieldset.attr(\"id\").split(\"-\")[1];\n                    var target_fieldset_id = $(this).attr(\"data-fieldset_drag_id\");\n                    if (orig_fieldset_id != target_fieldset_id) {\n                        var target_fieldset = $(\"#fieldset-\" + target_fieldset_id),\n                            tab_height = $(this).height(),\n                            tab_width = $(this).width(),\n                            tab_position = $(this).position();\n                        node.animate(\n                            {\n                                top: tab_position.top - node.position().top,\n                                left: tab_position.left - node.position().left,\n                                width: \"50%\",\n                                opacity: \"0\",\n                            },\n                            1000,\n                            function () {\n                                node.appendTo(target_fieldset);\n                                node.css(\"left\", \"\");\n                                node.css(\"top\", \"\");\n                                node.css(\"width\", \"\");\n                                node.css(\"opacity\", \"\");\n                            }\n                        );\n                        changefieldset_callback.apply(node, [target_fieldset_id]);\n                    }\n                    $(this).css(\"border\", \"\");\n                };\n                this.ondragover = function (e) {\n                    // style when we drag over tab or legend\n                    e.preventDefault();\n                    var draggable = e.dataTransfer.getData(\"draggable\");\n                    if (draggable) {\n                        $(this).css(\"border\", \"3px dotted red\");\n                        $(\"#drop-marker\").hide();\n                    }\n                    return false;\n                };\n                this.ondragleave = function (e) {\n                    // remove style when we leave tab or legend\n                    e.preventDefault();\n                    $(this).css(\"border\", \"\");\n                    $(\"#drop-marker\").show();\n                };\n            }\n            $(this).attr(\"data-fieldset_drag_id\", i);\n        });\n\n    $('<span class=\"draghandle\">&#x28FF;</span>')\n        .css(\"cursor\", \"ns-resize\")\n        .prependTo(\".fieldPreview.orderable .fieldLabel\");\n};\n"],"names":["SchemaEditor","el","this","$","length","init_schemaeditor","window","on","fieldset_id","$add_field","data","addClass","href","attr","split","removeClass","e","trigger","preventDefault","confirm","_authenticator","val","closest","detach","id","plone_schemaeditor_html5_sortable","position","fieldset_index","url","location","protocol","host","pathname","replace","join","pos","self","each","init_add_field","s","toLowerCase","rules","a","ae","c","i","n","o","oe","u","y","th","ss","_","r","reorder_callback","changefieldset_callback","css","ondragstart","dataTransfer","setData","insertBefore","ondragenter","ondragleave","ondragover","height","marker","pageY","offset","top","is","scrollTop","animate","ondrop","src","getData","node","insertAfter","target_fieldset_id","parents","first","find","parent","children","index","apply","ondragend","remove","orig_fieldset_id","target_fieldset","tab_position","width","left","opacity","appendTo","hide","show","prependTo"],"sourceRoot":""}