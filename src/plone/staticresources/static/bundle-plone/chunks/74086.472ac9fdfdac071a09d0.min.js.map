{"version":3,"file":"chunks/74086.472ac9fdfdac071a09d0.min.js","mappings":"8XAGqBA,EAAAA,WACjB,WAAYC,I,4FAAI,SACZC,KAAKD,GAAKA,E,sDAEd,SAAgBE,GACZC,IAAAA,KAAOD,GAAU,SAAUE,EAAUC,GACjCA,EAAQC,SAAS,eACGH,GAAAA,CAAEE,GAASE,KAAK,gBACtBC,KAAK,WAAY,iB,4BAGvC,SAAeN,GACXC,IAAAA,KAAOD,GAAU,SAAUE,EAAUC,GACjCA,EAAQI,YAAY,eACAN,GAAAA,CAAEE,GAASE,KAAK,gBACtBG,WAAW,iB,4BAGjC,WAEI,IAAIC,EAAmBR,GAAAA,CAAE,iBAAiBS,SAAS,oBAC/CC,EAAoBV,GAAAA,CAAE,iBAAiBS,SAAS,qBAChDE,EAAqBX,GAAAA,CAAE,iBAAiBS,SAAS,uBAG5B,IAArBD,EACAV,KAAKc,eAAe,CAChBZ,GAAAA,CAAE,8CACFA,GAAAA,CAAE,mDACFA,GAAAA,CAAE,8CACFA,GAAAA,CAAE,gDACFA,GAAAA,CAAE,sDACFA,GAAAA,CAAE,0CACFA,GAAAA,CAAE,mCACFA,GAAAA,CAAE,gDACFA,GAAAA,CAAE,0DACFA,GAAAA,CAAE,2CACFA,GAAAA,CAAE,uDAINF,KAAKe,gBAAgB,CACjBb,GAAAA,CAAE,8CACFA,GAAAA,CAAE,mDACFA,GAAAA,CAAE,8CACFA,GAAAA,CAAE,gDACFA,GAAAA,CAAE,sDACFA,GAAAA,CAAE,0CACFA,GAAAA,CAAE,mCACFA,GAAAA,CAAE,gDACFA,GAAAA,CAAE,0DACFA,GAAAA,CAAE,2CACFA,GAAAA,CAAE,wDAKiB,IAAvBW,EACAb,KAAKe,gBAAgB,CACjBb,GAAAA,CAAE,0DACFA,GAAAA,CAAE,2CACFA,GAAAA,CAAE,wDAKmB,IAArBQ,GACAV,KAAKc,eAAe,CAChBZ,GAAAA,CAAE,0DACFA,GAAAA,CAAE,2CACFA,GAAAA,CAAE,wDAOY,IAAtBU,GACAZ,KAAKe,gBAAgB,CACjBb,GAAAA,CAAE,kD,kBAKd,WACI,IAAIc,EAAOhB,KAUXgB,EAAKC,iBAELf,GAAAA,CAAE,oCAAoCgB,GAAG,UAAU,WAC3ClB,KAAKmB,QACLjB,GAAAA,CAAE,iBAAiBG,SAAS,oBAG5BH,GAAAA,CAAE,iBAAiBM,YAAY,oBAEnCQ,EAAKC,oBAQTf,GAAAA,CAAE,mCAAmCkB,KAAK,UAAU,WAChDlB,GAAAA,CAAEF,MAAMM,KAAK,gBAAgBG,WAAW,oB,gFAjH/BX","sources":["webpack://plone.staticresources/./node_modules/mockup/src/pat/controlpanels/discussion--implementation.js"],"sourcesContent":["import $ from \"jquery\";\nimport Modal from \"../modal/modal\";\n\nexport default class Contentrules {\n    constructor(el) {\n        this.el = el;\n    }\n    disableSettings(settings) {\n        $.each(settings, function (intIndex, setting) {\n            setting.addClass('unclickable');\n            var setting_field = $(setting).find('input,select');\n            setting_field.attr('disabled', 'disabled');\n        });\n    }\n    enableSettings(settings) {\n        $.each(settings, function (intIndex, setting) {\n            setting.removeClass('unclickable');\n            var setting_field = $(setting).find('input,select');\n            setting_field.removeAttr('disabled');\n        });\n    }\n    updateSettings() {\n\n        var globally_enabled = $('#content-core').hasClass('globally_enabled');\n        var moderation_custom = $('#content-core').hasClass('moderation_custom');\n        var invalid_mail_setup = $('#content-core').hasClass('invalid_mail_setup');\n\n        /* If commenting is globally disabled, disable all settings. */\n        if (globally_enabled === true) {\n            this.enableSettings([\n                $('#formfield-form-widgets-anonymous_comments'),\n                $('#formfield-form-widgets-anonymous_email_enabled'),\n                $('#formfield-form-widgets-moderation_enabled'),\n                $('#formfield-form-widgets-edit_comment_enabled'),\n                $('#formfield-form-widgets-delete_own_comment_enabled'),\n                $('#formfield-form-widgets-text_transform'),\n                $('#formfield-form-widgets-captcha'),\n                $('#formfield-form-widgets-show_commenter_image'),\n                $('#formfield-form-widgets-moderator_notification_enabled'),\n                $('#formfield-form-widgets-moderator_email'),\n                $('#formfield-form-widgets-user_notification_enabled')\n            ]);\n        }\n        else {\n            this.disableSettings([\n                $('#formfield-form-widgets-anonymous_comments'),\n                $('#formfield-form-widgets-anonymous_email_enabled'),\n                $('#formfield-form-widgets-moderation_enabled'),\n                $('#formfield-form-widgets-edit_comment_enabled'),\n                $('#formfield-form-widgets-delete_own_comment_enabled'),\n                $('#formfield-form-widgets-text_transform'),\n                $('#formfield-form-widgets-captcha'),\n                $('#formfield-form-widgets-show_commenter_image'),\n                $('#formfield-form-widgets-moderator_notification_enabled'),\n                $('#formfield-form-widgets-moderator_email'),\n                $('#formfield-form-widgets-user_notification_enabled')\n            ]);\n        }\n\n        /* If the mail setup is invalid, disable the mail settings. */\n        if (invalid_mail_setup === true) {\n            this.disableSettings([\n                $('#formfield-form-widgets-moderator_notification_enabled'),\n                $('#formfield-form-widgets-moderator_email'),\n                $('#formfield-form-widgets-user_notification_enabled')\n            ]);\n        }\n        else {\n            /* Enable mail setup only if discussion is enabled. */\n            if (globally_enabled === true) {\n                this.enableSettings([\n                    $('#formfield-form-widgets-moderator_notification_enabled'),\n                    $('#formfield-form-widgets-moderator_email'),\n                    $('#formfield-form-widgets-user_notification_enabled')\n                ]);\n            }\n        }\n\n        /* If a custom workflow for comments is enabled, disable the moderation\n        switch. */\n        if (moderation_custom === true) {\n            this.disableSettings([\n                $('#formfield-form-widgets-moderation_enabled')\n            ]);\n        }\n    };\n\n    init() {\n        let self = this;\n        /* Disable a control panel setting */\n        //#JSCOVERAGE_IF 0\n\n        /**************************************************************************\n         * Window Load Function: Executes when complete page is fully loaded,\n         * including all frames,\n         **************************************************************************/\n\n        // Update settings on page load\n        self.updateSettings();\n        // Set #content-core class and update settings afterwards\n        $('#form-widgets-globally_enabled-0').on('change', function(){\n            if (this.checked) {\n                $('#content-core').addClass('globally_enabled');\n            }\n            else {\n                $('#content-core').removeClass('globally_enabled');\n            }\n            self.updateSettings();\n        });\n\n        /**********************************************************************\n         * Remove the disabled attribute from all form elements before\n         * submitting the form. Otherwise the z3c.form will raise errors on\n         * the required attributes.\n         **********************************************************************/\n        $('form#DiscussionSettingsEditForm').bind('submit', function () {\n            $(this).find('input,select').removeAttr('disabled');\n        });\n\n\n    //#JSCOVERAGE_ENDIF\n    }\n\n}\n"],"names":["Contentrules","el","this","settings","$","intIndex","setting","addClass","find","attr","removeClass","removeAttr","globally_enabled","hasClass","moderation_custom","invalid_mail_setup","enableSettings","disableSettings","self","updateSettings","on","checked","bind"],"sourceRoot":""}