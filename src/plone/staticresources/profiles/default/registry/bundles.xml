<?xml version="1.0"?>
<registry>

  <!-- Plone bundle resources -->
  <records prefix="plone.resources/plone-base"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-base.js</value>
  </records>
  <records prefix="plone.resources/plone"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone.js</value>
      <value key="css">
        <element>++plone++static/plone.less</element>
      </value>
  </records>
  <records prefix="plone.resources/plone-logged-in"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-logged-in.js</value>
      <value key="css">
        <element>++plone++static/plone-logged-in.less</element>
      </value>
  </records>
  <records prefix="plone.resources/plone-moment"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-moment.js</value>
  </records>
  <records prefix="plone.resources/plone-editor-tools"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-editor-tools.js</value>
      <value key="css">
        <element>++plone++static/plone-editor-tools.less</element>
      </value>
  </records>
  <records prefix="plone.resources/plone-tinymce"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-tinymce.js</value>
      <value key="css">
        <element>++plone++static/plone-tinymce.less</element>
      </value>
  </records>
  <records prefix="plone.resources/plone-datatables"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++resource++plone-datatables.js</value>
      <value key="css">
        <element>++plone++static/plone-datatables.less</element>
      </value>
  </records>
  <records prefix="plone.resources/resourceregistry"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/resourceregistry.js</value>
      <value key="css">
        <element>++plone++static/resourceregistry.less</element>
      </value>
  </records>
  <records prefix="plone.resources/thememapper"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/thememapper.js</value>
      <value key="css">
        <element>++plone++static/thememapper.less</element>
      </value>
  </records>
  <records prefix="plone.resources/filemanager"
            interface='Products.CMFPlone.interfaces.IResourceRegistry'>
      <value key="js">++plone++static/filemanager.js</value>
      <value key="css">
        <element>++plone++static/filemanager.less</element>
      </value>
  </records>

  <!-- Bundles -->
  <records prefix="plone.bundles/plone-base"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone-base</element>
    </value>
    <value key="enabled">True</value>
    <value key="jscompilation">++plone++static/plone-base-compiled.min.js</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>jquery</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone-base</value>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone</element>
    </value>
    <value key="enabled">True</value>
    <value key="jscompilation">++plone++static/plone-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>jquery</element>
      <element>jquery.browser</element>
      <element>logging</element>
      <element>mockup-patterns-base</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>underscore</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-moment"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone-base</value>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone-moment</element>
    </value>
    <value key="enabled">True</value>
    <value key="jscompilation">++plone++static/plone-moment-compiled.min.js</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>jquery</element>
      <element>jquery.browser</element>
      <element>logging</element>
      <element>mockup-patterns-base</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>underscore</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-logged-in"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone</value>
    <value key="merge_with">logged-in</value>
    <value key="resources">
      <element>plone-logged-in</element>
    </value>
    <value key="enabled">True</value>
    <value key="expression">python: member is not None</value>
    <value key="jscompilation">++plone++static/plone-logged-in-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-logged-in-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.browser</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>logging</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>moment</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>translate</element>
      <element>underscore</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-editor-tools"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone</value>
    <value key="merge_with">logged-in</value>
    <value key="resources">
      <element>plone-editor-tools</element>
    </value>
    <value key="enabled">True</value>
    <value key="expression">python: member is not None</value>
    <value key="jscompilation">++plone++static/plone-editor-tools-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-editor-tools-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.browser</element>
      <element>jquery.event.drag</element>
      <element>jquery.event.drop</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>logging</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-patterns-pickadate</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>moment</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>translate</element>
      <element>underscore</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-tinymce"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone</value>
    <value key="merge_with">logged-in</value>
    <value key="resources">
      <element>plone-tinymce</element>
    </value>
    <value key="enabled">True</value>
    <value key="expression">python: member is not None</value>
    <value key="jscompilation">++plone++static/plone-tinymce-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-tinymce-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>backbone</element>
      <element>bootstrap-dropdown</element>
      <element>bootstrap-tooltip</element>
      <element>jquery.browser</element>
      <element>jquery.event.drag</element>
      <element>jquery.event.drop</element>
      <element>jquery.form</element>
      <element>jquery</element>
      <element>logging</element>
      <element>mockup-i18n</element>
      <element>mockup-patterns-autotoc</element>
      <element>mockup-patterns-backdrop</element>
      <element>mockup-patterns-base</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-moment</element>
      <element>mockup-patterns-pickadate</element>
      <element>mockup-router</element>
      <element>mockup-utils</element>
      <element>moment</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>translate</element>
      <element>underscore</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-datatables"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone-base</value>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone-datatables</element>
    </value>
    <value key="enabled">False</value>
    <value key="expression"></value>
    <value key="jscompilation">++plone++static/plone-datatables-compiled.min.js</value>
    <value key="csscompilation">++plone++static/plone-datatables-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>jquery</element>
      <element>jquery.browser</element>
      <element>logging</element>
      <element>mockup-patterns-base</element>
      <element>pat-base</element>
      <element>pat-compat</element>
      <element>pat-jquery-ext</element>
      <element>pat-logger</element>
      <element>pat-mockup-parser</element>
      <element>pat-registry</element>
      <element>pat-utils</element>
      <element>underscore</element>
    </value>
  </records>

  <records prefix="plone.bundles/plone-legacy"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone</value>
    <value key="merge_with">default</value>
    <value key="resources" purge="false">
      <element>bootstrap-js</element>
    </value>
    <value key="jscompilation">++plone++static/plone-legacy-compiled.js</value>
    <value key="csscompilation">++plone++static/plone-legacy-compiled.css</value>
    <value key="last_compilation">2021-09-08 07:30:00</value>
    <value key="compile">False</value>
    <value key="enabled">True</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
  </records>

  <records prefix="plone.bundles/plone-fontello"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone</value>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone-fontello</element>
    </value>
    <value key="enabled">True</value>
    <value key="csscompilation">++plone++static/plone-fontello-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
  </records>

  <records prefix="plone.bundles/plone-glyphicons"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="depends">plone</value>
    <value key="merge_with">default</value>
    <value key="resources">
      <element>plone-glyphicons</element>
    </value>
    <value key="enabled">True</value>
    <value key="csscompilation">++plone++static/plone-glyphicons-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
  </records>

  <records prefix="plone.bundles/resourceregistry"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="resources">
      <element>resourceregistry</element>
    </value>
    <value key="enabled">False</value>
    <value key="jscompilation">++plone++static/resourceregistry-compiled.min.js</value>
    <value key="csscompilation">++plone++static/resourceregistry-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
    <value key="stub_js_modules">
      <element>jquery</element>
    </value>
  </records>

  <records prefix="plone.bundles/thememapper"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="resources">
      <element>thememapper</element>
    </value>
    <value key="enabled">False</value>
    <value key="jscompilation">++plone++static/thememapper-compiled.min.js</value>
    <value key="csscompilation">++plone++static/thememapper-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
  </records>

  <records prefix="plone.bundles/filemanager"
            interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="resources">
      <element>filemanager</element>
    </value>
    <value key="enabled">False</value>
    <value key="jscompilation">++plone++static/filemanager-compiled.min.js</value>
    <value key="csscompilation">++plone++static/filemanager-compiled.css</value>
    <value key="load_async">False</value>
    <value key="load_defer">False</value>
  </records>

  <!-- legacy js -->
  <record name="plone.resources.last_legacy_import">
    <field type="plone.registry.field.Datetime">
      <title>Last legacy js/css import date</title>
      <description>It's used to decide if its needed to compile or not the production css/js</description>
    </field>
    <value>2021-01-21 11:40:00</value>
  </record>

</registry>
